#!/bin/bash

# Post-rewrite hook: Sync BricksSync changes from production after rebase
# This ensures devs have latest client changes when rebasing with staging

if [[ "$1" == "rebase" ]]; then
    # Get current branch and rebase target
    current_branch=$(git branch --show-current)
    rebase_target=$(git reflog --oneline -1 | grep -o 'rebase.*' | cut -d' ' -f2)
    
    # Check if we're rebasing with staging or main on staging branch
    if [[ "$rebase_target" == "staging" ]] || ([[ "$current_branch" == "staging" ]] && [[ "$rebase_target" == "main" ]]); then
        echo "Rebase with $rebase_target detected - syncing BricksSync changes..."
        
        # Check if sync script exists and run it
        if [[ -f "scripts/sync-production-brickssync.sh" ]]; then
            ./scripts/sync-production-brickssync.sh
            
            # Check for conflicts
            if git diff --name-only --diff-filter=U | grep -q "brickssync-json"; then
                echo "WARNING: Conflicts detected in BricksSync files"
            else
                echo "SUCCESS: Production changes synced"
            fi
        else
            echo "WARNING: Sync script not found"
        fi
    fi
fi
